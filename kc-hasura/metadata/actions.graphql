type Mutation {
  create_auth_token (
    email: String!
    password: String!
  ): CreateAuthTokenOutput
}

type Mutation {
  create_dca_order (
    user_exchange_keys_uid: uuid!
    market_uid: uuid!
    start_at: timestamp!
    market_offset: Float!
    daily_average: Float!
    min_price_nzd: Float
    max_price_nzd: Float
    min_amount_nzd: Float
    max_amount_nzd: Float
  ): CreateDCAOrderResult
}

type Mutation {
  create_user (
    email: String!
    password: String!
  ): CreateUserOutput
}

type Mutation {
  set_user_exchange_keys (
    exchange_uid: uuid!
    keys: jsonb!
    description: String!
  ): SetUserExchangeKeysOutput
}

type Mutation {
  validate_user_exchange_keys (
    user_exchange_keys_uid: String!
  ): ValidateUserExchangeKeysOutput
}

input SampleInput {
  username : String!
  password : String!
}

type SampleOutput {
  accessToken : String!
}

type CreateUserOutput {
  user_uid : String!
}

type CreateAuthTokenOutput {
  user_uid : String!
  auth_token : String!
}

type GetEmailOutput {
  email : String!
}

type SetUserExchangeKeysOutput {
  user_exchange_keys_uid : uuid!
}

type ValidateUserExchangeKeysOutput {
  user_exchange_keys_uid : String!
  is_valid : Boolean!
  validation_message : String
}

type CreateDCAOrderResult {
  dca_order_uid : uuid!
}


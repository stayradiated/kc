name: Main

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: stayradiated/volatile
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - 
        name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - 
        name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - 
        name: Install PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.7.6
          run_install: true

      - 
        name: Compile Typescript Packages
        run: |
          pnpm -r --workspace-concurrency=1 build
          
          # hack to fix issue with ncc mixing CJS/ESM code
          sed -i -e '/"type": "module"/d' ./svc-server/package.json
          pnpm -r --workspace-concurrency=1 build:ncc

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: svc-docker/Dockerfile
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - 
        name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
